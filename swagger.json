{
  "openapi": "3.0.0",
  "paths": {
    "/": {
      "get": {
        "operationId": "AppController_getHello",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "App"
        ]
      }
    },
    "/metrics": {
      "get": {
        "operationId": "MetricsController_getMetrics",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Metrics"
        ]
      }
    },
    "/tenants": {
      "get": {
        "description": "Devuelve una lista de todos los tenants registrados.",
        "operationId": "TenantsController_getTenants",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Lista de tenants recuperada exitosamente."
          }
        },
        "summary": "Obtener todos los tenants",
        "tags": [
          "tenants"
        ]
      },
      "post": {
        "description": "Crea un nuevo tenant con su nombre de negocio y correo electrónico.",
        "operationId": "TenantsController_createTenant",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTenantDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Tenant creado exitosamente."
          },
          "400": {
            "description": "Solicitud inválida. Faltan campos obligatorios o son incorrectos."
          }
        },
        "summary": "Crear un nuevo tenant",
        "tags": [
          "tenants"
        ]
      }
    },
    "/auth/login": {
      "post": {
        "description": "Permite a los usuarios autenticarse con su correo electrónico, contraseña y nombre del negocio.",
        "operationId": "AuthController_login",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Inicio de sesión exitoso. Devuelve un token de autenticación."
          },
          "401": {
            "description": "Credenciales inválidas. No se pudo autenticar al usuario."
          }
        },
        "summary": "Iniciar sesión",
        "tags": [
          "auth"
        ]
      }
    },
    "/users": {
      "get": {
        "description": "Devuelve todos los usuarios asociados al tenant actual.",
        "operationId": "UsersController_getUsers",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Usuarios recuperados con éxito."
          },
          "401": {
            "description": "No autorizado. Falta token JWT o es inválido."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Obtener todos los usuarios",
        "tags": [
          "users"
        ]
      },
      "post": {
        "description": "Crea un usuario asociado al tenant actual.",
        "operationId": "UsersController_createUser",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Usuario creado con éxito."
          },
          "400": {
            "description": "Datos de entrada inválidos."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Crear un nuevo usuario",
        "tags": [
          "users"
        ]
      }
    },
    "/users/{id}": {
      "get": {
        "description": "Devuelve un usuario específico asociado al tenant actual.",
        "operationId": "UsersController_getUserById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Usuario recuperado con éxito."
          },
          "401": {
            "description": "No autorizado."
          },
          "404": {
            "description": "Usuario no encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Obtener un usuario por ID",
        "tags": [
          "users"
        ]
      },
      "patch": {
        "description": "Actualiza los datos de un usuario asociado al tenant actual.",
        "operationId": "UsersController_updateUser",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Usuario actualizado con éxito."
          },
          "404": {
            "description": "Usuario no encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Actualizar un usuario",
        "tags": [
          "users"
        ]
      },
      "delete": {
        "description": "Elimina un usuario asociado al tenant actual.",
        "operationId": "UsersController_deleteUser",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Usuario eliminado con éxito."
          },
          "404": {
            "description": "Usuario no encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Eliminar un usuario",
        "tags": [
          "users"
        ]
      }
    },
    "/categories": {
      "get": {
        "description": "Devuelve una lista de todas las categorías asociadas al tenant actual.",
        "operationId": "CategoriesController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Categorías recuperadas con éxito."
          },
          "401": {
            "description": "No autorizado. Falta el token JWT o es inválido."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Obtener todas las categorías",
        "tags": [
          "categories"
        ]
      },
      "post": {
        "description": "Crea una nueva categoría asociada al tenant actual.",
        "operationId": "CategoriesController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCategoryDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Categoría creada con éxito."
          },
          "400": {
            "description": "Datos de entrada inválidos."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Crear una nueva categoría",
        "tags": [
          "categories"
        ]
      }
    },
    "/categories/{id}": {
      "patch": {
        "description": "Actualiza los datos de una categoría existente para el tenant actual.",
        "operationId": "CategoriesController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCategoryDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Categoría actualizada con éxito."
          },
          "404": {
            "description": "Categoría no encontrada."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Actualizar una categoría",
        "tags": [
          "categories"
        ]
      },
      "delete": {
        "description": "Elimina una categoría asociada al tenant actual.",
        "operationId": "CategoriesController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Categoría eliminada con éxito."
          },
          "404": {
            "description": "Categoría no encontrada."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Eliminar una categoría",
        "tags": [
          "categories"
        ]
      }
    },
    "/suppliers": {
      "get": {
        "description": "Devuelve una lista de todos los proveedores asociados al tenant actual.",
        "operationId": "SuppliersController_getSuppliers",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Lista de proveedores recuperada con éxito."
          },
          "401": {
            "description": "No autorizado. Falta token JWT o es inválido."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Obtener todos los proveedores",
        "tags": [
          "suppliers"
        ]
      },
      "post": {
        "description": "Crea un nuevo proveedor para el tenant actual.",
        "operationId": "SuppliersController_createSupplier",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSupplierDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Proveedor creado con éxito."
          },
          "400": {
            "description": "Datos de entrada inválidos."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Crear un nuevo proveedor",
        "tags": [
          "suppliers"
        ]
      }
    },
    "/suppliers/{tenantId}/{supplierId}": {
      "patch": {
        "description": "Actualiza los datos de un proveedor existente para el tenant especificado.",
        "operationId": "SuppliersController_updateSupplier",
        "parameters": [
          {
            "name": "tenantId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "supplierId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSupplierDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Proveedor actualizado con éxito."
          },
          "404": {
            "description": "Proveedor no encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Actualizar un proveedor",
        "tags": [
          "suppliers"
        ]
      },
      "delete": {
        "description": "Elimina un proveedor asociado al tenant especificado.",
        "operationId": "SuppliersController_deleteSupplier",
        "parameters": [
          {
            "name": "tenantId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "supplierId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Proveedor eliminado con éxito."
          },
          "404": {
            "description": "Proveedor no encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Eliminar un proveedor",
        "tags": [
          "suppliers"
        ]
      }
    },
    "/products": {
      "get": {
        "description": "Devuelve una lista de productos para el tenant actual.",
        "operationId": "ProductsController_getProducts",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Productos recuperados con éxito."
          },
          "401": {
            "description": "No autorizado. Falta el tenantId o el token JWT es inválido."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Obtener todos los productos",
        "tags": [
          "products"
        ]
      },
      "post": {
        "description": "Crea un producto asociado al tenant actual.",
        "operationId": "ProductsController_createProduct",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProductDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Producto creado con éxito."
          },
          "400": {
            "description": "Datos de entrada inválidos."
          },
          "401": {
            "description": "No autorizado. Falta el tenantId o el token JWT es inválido."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Crear un nuevo producto",
        "tags": [
          "products"
        ]
      }
    },
    "/sales": {
      "get": {
        "description": "Devuelve una lista de todas las ventas asociadas al tenant actual.",
        "operationId": "SalesController_getSales",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Ventas recuperadas con éxito."
          },
          "401": {
            "description": "No autorizado. Falta el token JWT o es inválido."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Obtener todas las ventas",
        "tags": [
          "sales"
        ]
      },
      "post": {
        "description": "Crea una nueva venta asociada al tenant actual.",
        "operationId": "SalesController_createSale",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSaleDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Venta creada con éxito."
          },
          "400": {
            "description": "Datos de entrada inválidos."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Crear una nueva venta",
        "tags": [
          "sales"
        ]
      }
    },
    "/sales/shift/{shiftId}": {
      "get": {
        "description": "Devuelve las ventas asociadas a un turno específico del tenant actual.",
        "operationId": "SalesController_getSalesByShift",
        "parameters": [
          {
            "name": "shiftId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ventas por turno recuperadas con éxito."
          },
          "404": {
            "description": "Turno no encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Obtener ventas por turno",
        "tags": [
          "sales"
        ]
      }
    },
    "/sales/{tenantId}/{saleId}": {
      "put": {
        "description": "Actualiza los datos de una venta específica para el tenant especificado.",
        "operationId": "SalesController_updateSale",
        "parameters": [
          {
            "name": "tenantId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "saleId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSaleDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Venta actualizada con éxito."
          },
          "404": {
            "description": "Venta no encontrada."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Actualizar una venta",
        "tags": [
          "sales"
        ]
      },
      "delete": {
        "description": "Elimina una venta asociada al tenant especificado.",
        "operationId": "SalesController_deleteSale",
        "parameters": [
          {
            "name": "tenantId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "saleId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Venta eliminada con éxito."
          },
          "404": {
            "description": "Venta no encontrada."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Eliminar una venta",
        "tags": [
          "sales"
        ]
      }
    },
    "/shifts": {
      "post": {
        "description": "Crea un turno asociado al tenant actual.",
        "operationId": "ShiftsController_createShift",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateShiftDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Turno creado con éxito."
          },
          "400": {
            "description": "Datos de entrada inválidos."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Crear un nuevo turno",
        "tags": [
          "shifts"
        ]
      }
    },
    "/shifts/{tenantId}/{shiftId}": {
      "put": {
        "description": "Actualiza los datos de un turno existente para el tenant especificado.",
        "operationId": "ShiftsController_updateShift",
        "parameters": [
          {
            "name": "tenantId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "shiftId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Turno actualizado con éxito."
          },
          "404": {
            "description": "Turno no encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Actualizar un turno",
        "tags": [
          "shifts"
        ]
      },
      "delete": {
        "description": "Elimina un turno asociado al tenant especificado.",
        "operationId": "ShiftsController_deleteShift",
        "parameters": [
          {
            "name": "tenantId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "shiftId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Turno eliminado con éxito."
          },
          "404": {
            "description": "Turno no encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Eliminar un turno",
        "tags": [
          "shifts"
        ]
      }
    },
    "/shifts/{shiftId}/close": {
      "patch": {
        "description": "Cierra un turno especificando el efectivo final.",
        "operationId": "ShiftsController_closeShift",
        "parameters": [
          {
            "name": "shiftId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CloseShiftDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Turno cerrado con éxito."
          },
          "400": {
            "description": "Datos de entrada inválidos."
          },
          "404": {
            "description": "Turno no encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Cerrar un turno",
        "tags": [
          "shifts"
        ]
      }
    },
    "/saleItems": {
      "get": {
        "operationId": "SaleItemsController_getSaleItems",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "SaleItems"
        ]
      },
      "post": {
        "operationId": "SaleItemsController_createSaleItem",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "SaleItems"
        ]
      }
    },
    "/saleItems/{tenantId}/{saleItemId}": {
      "put": {
        "operationId": "SaleItemsController_updateSaleItem",
        "parameters": [
          {
            "name": "tenantId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "saleItemId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "SaleItems"
        ]
      },
      "delete": {
        "operationId": "SaleItemsController_deleteSaleItem",
        "parameters": [
          {
            "name": "tenantId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "saleItemId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "SaleItems"
        ]
      }
    }
  },
  "info": {
    "title": "Inventory POS API",
    "description": "API para el sistema de inventario y punto de venta",
    "version": "1.0",
    "contact": {}
  },
  "tags": [
    {
      "name": "inventory",
      "description": ""
    }
  ],
  "servers": [],
  "components": {
    "securitySchemes": {
      "bearer": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http"
      }
    },
    "schemas": {
      "CreateTenantDto": {
        "type": "object",
        "properties": {
          "businessName": {
            "type": "string",
            "description": "Nombre del negocio del tenant",
            "example": "Tech Corp"
          },
          "email": {
            "type": "string",
            "description": "Correo electrónico del tenant",
            "example": "admin@techcorp.com"
          }
        },
        "required": [
          "businessName",
          "email"
        ]
      },
      "LoginDto": {
        "type": "object",
        "properties": {
          "businessName": {
            "type": "string",
            "description": "Nombre del negocio asociado al usuario",
            "example": "Tech Corp"
          },
          "email": {
            "type": "string",
            "description": "Correo electrónico del usuario",
            "example": "admin@techcorp.com"
          },
          "password": {
            "type": "string",
            "description": "Contraseña del usuario",
            "example": "password123"
          }
        },
        "required": [
          "businessName",
          "email",
          "password"
        ]
      },
      "CreateUserDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Nombre del usuario",
            "example": "Juan Pérez"
          },
          "email": {
            "type": "string",
            "description": "Correo electrónico del usuario",
            "example": "juan.perez@example.com"
          },
          "password": {
            "type": "string",
            "description": "Contraseña del usuario",
            "example": "password123"
          },
          "tenantId": {
            "type": "string",
            "description": "ID del tenant",
            "example": "63f1b23c9a7d2e1234abcd56"
          }
        },
        "required": [
          "name",
          "email",
          "password"
        ]
      },
      "UpdateUserDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Nombre del usuario",
            "example": "Juan Pérez"
          },
          "email": {
            "type": "string",
            "description": "Correo electrónico del usuario",
            "example": "juan.perez@example.com"
          },
          "password": {
            "type": "string",
            "description": "Contraseña del usuario",
            "example": "password123"
          }
        }
      },
      "CreateCategoryDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Nombre de la categoría",
            "example": "Electrónica"
          }
        },
        "required": [
          "name"
        ]
      },
      "UpdateCategoryDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Nombre actualizado de la categoría",
            "example": "Ropa"
          }
        }
      },
      "CreateSupplierDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Nombre del proveedor",
            "example": "Proveedor ABC"
          },
          "contactInfo": {
            "type": "string",
            "description": "Información de contacto del proveedor",
            "example": "contacto@proveedorabc.com"
          }
        },
        "required": [
          "name",
          "contactInfo"
        ]
      },
      "UpdateSupplierDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Nombre del proveedor",
            "example": "Proveedor XYZ"
          },
          "contactInfo": {
            "type": "string",
            "description": "Información de contacto del proveedor",
            "example": "contacto@proveedorxyz.com"
          }
        }
      },
      "CreateProductDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Nombre del producto",
            "example": "Laptop"
          },
          "price": {
            "type": "number",
            "description": "Precio del producto",
            "example": 999.99
          },
          "categoryId": {
            "type": "string",
            "description": "ID de la categoría del producto",
            "example": "63f1b23c9a7d2e1234abcd56"
          }
        },
        "required": [
          "name",
          "price",
          "categoryId"
        ]
      },
      "SaleItemDto": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "string",
            "description": "ID del producto",
            "example": "63f1b23c9a7d2e1234abcd56"
          },
          "quantity": {
            "type": "number",
            "description": "Cantidad del producto vendido",
            "example": 2
          },
          "price": {
            "type": "number",
            "description": "Precio unitario del producto",
            "example": 15.99
          }
        },
        "required": [
          "productId",
          "quantity",
          "price"
        ]
      },
      "CreateSaleDto": {
        "type": "object",
        "properties": {
          "items": {
            "description": "Lista de productos vendidos",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SaleItemDto"
            }
          },
          "total": {
            "type": "number",
            "description": "Total de la venta",
            "example": 31.98
          }
        },
        "required": [
          "items",
          "total"
        ]
      },
      "UpdateSaleDto": {
        "type": "object",
        "properties": {
          "items": {
            "description": "Lista actualizada de productos vendidos",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SaleItemDto"
            }
          },
          "total": {
            "type": "number",
            "description": "Total actualizado de la venta",
            "example": 31.98
          }
        }
      },
      "CreateShiftDto": {
        "type": "object",
        "properties": {
          "startTime": {
            "type": "string",
            "description": "Hora de inicio del turno en formato ISO 8601",
            "example": "2025-01-21T08:00:00Z"
          },
          "endTime": {
            "type": "string",
            "description": "Hora de finalización esperada del turno en formato ISO 8601",
            "example": "2025-01-21T16:00:00Z"
          },
          "initialCash": {
            "type": "number",
            "description": "Efectivo inicial del turno",
            "example": 100
          }
        },
        "required": [
          "startTime",
          "endTime",
          "initialCash"
        ]
      },
      "CloseShiftDto": {
        "type": "object",
        "properties": {
          "finalCash": {
            "type": "number",
            "description": "Efectivo final al cerrar el turno",
            "example": 120
          }
        },
        "required": [
          "finalCash"
        ]
      }
    }
  }
}